plugins {
    id 'java'
    id 'com.gradle.build-scan' version '2.2.1'
}

group 'org.gradle'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

ext.geServer = System.getProperty('geServer')

buildScan {
    publishAlways()
    
    server = geServer
    
    captureTaskInputFiles = true

    tag(System.getenv('CI') ? 'CI' : 'LOCAL')
    tag(project.hasProperty('android.injected.invoked.from.ide') ? 'Android Studio' : 'CLI')
    tag(gradle.startParameter.buildCacheEnabled ? 'CACHED' : 'NOT_CACHED')
    
    background {
        def gitCommitId = execAndGetStdout('git', 'rev-parse', '--verify', 'HEAD')
        def branchName = execAndGetStdout('git', 'rev-parse', '--abbrev-ref', 'HEAD')
        def status = execAndGetStdout('git', 'status', '--porcelain')
        if (branchName != null && !branchName.isEmpty() && branchName != 'HEAD') {
            tag branchName
            value 'Git branch name', branchName
        }
        if (status != null && !status.isEmpty()) {
            tag 'dirty'
            value 'Git status', status
        }
        def commitIdName = 'Git Commit ID'
        value commitIdName, gitCommitId
        link 'Git commit scans', customValueSearchUrl([(commitIdName): gitCommitId])
        link 'Source', "https://github.com/gradle/buildscan-snippets/tree/$gitCommitId"
    }
}

def customValueSearchUrl(Map<String, String> search) {
    def query = search.collect { name, value ->
        "search.names=${name.urlEncode()}&search.values=${value.urlEncode()}"
    }.join('&')
    return "$geServer/scans?$query"
}

def execAndGetStdout(String... args) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine(args)
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

String.metaClass.urlEncode = { -> URLEncoder.encode(delegate as String, 'UTF-8') }