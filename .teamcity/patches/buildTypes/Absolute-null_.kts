package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.MavenBuildStep
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.maven
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with absolute id = 'null_'
accordingly, and delete the patch script.
*/
changeBuildType(AbsoluteId("null_")) {
    expectSteps {
        script {
            name = "Import signing key"
            scriptContent = "echo ${'$'}PGP_SIGNING_KEY | gpg --import"
        }
        maven {
            goals = "release:prepare"
            pomLocation = "common-custom-user-data-maven-extension/pom.xml"
            runnerArgs = """
                -Dscan=false
                -DreleaseVersion=%env.MAVEN_RELEASE_VERSION%
                -DdevelopmentVersion=%env.MAVEN_DEVELOPMENT_VERSION%
                -Dtag=common-custom-user-data-maven-extension-%env.MAVEN_RELEASE_VERSION%
                -Prelease
            """.trimIndent()
            mavenVersion = custom {
                path = "%teamcity.tool.maven.3.6.3%"
            }
            userSettingsSelection = "settings.xml"
            localRepoScope = MavenBuildStep.RepositoryScope.BUILD_CONFIGURATION
            jdkHome = "%linux.java8.oracle.64bit%"
        }
        maven {
            goals = "release:perform"
            pomLocation = "common-custom-user-data-maven-extension/pom.xml"
            runnerArgs = "-Dscan=false -Prelease"
            mavenVersion = custom {
                path = "%teamcity.tool.maven.3.6.3%"
            }
            userSettingsSelection = "settings.xml"
            localRepoScope = MavenBuildStep.RepositoryScope.BUILD_CONFIGURATION
            jdkHome = "%linux.java8.oracle.64bit%"
        }
        script {
            name = "Remove signing key"
            executionMode = BuildStep.ExecutionMode.ALWAYS
            scriptContent = "gpg --delete-keys 5208812E1E4A6DB0"
        }
    }
    steps {
        update<ScriptBuildStep>(0) {
            scriptContent = """
                export SIGNING_KEY=${'$'}(cat <<EOF
                %env.PGP_SIGNING_KEY%
                EOF
                )
                echo ${'$'}SIGNING_KEY | gpg --import
            """.trimIndent()
        }
    }
}
